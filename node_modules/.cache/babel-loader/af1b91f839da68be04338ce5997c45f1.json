{"ast":null,"code":"var _jsxFileName = \"/Users/kannakattisanjana/final_excel_data/src/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange\n}) => {\n  _s();\n\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0) setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n  const paginationItems = useMemo(() => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => onPageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this));\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n  if (totalPages === 0) return null;\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), paginationItems, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaginationComponent, \"MKlQ5ncFBmedXV2GyHherFj+chg=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"sources":["/Users/kannakattisanjana/final_excel_data/src/Pagination.js"],"names":["React","useEffect","useState","useMemo","Pagination","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","pages","i","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AACzBC,EAAAA,KAAK,GAAG,CADiB;AAEzBC,EAAAA,YAAY,GAAG,EAFU;AAGzBC,EAAAA,WAAW,GAAG,CAHW;AAIzBC,EAAAA;AAJyB,CAAD,KAKtB;AAAA;;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,GAAG,CAAR,IAAaC,YAAY,GAAG,CAAhC,EACII,aAAa,CAACC,IAAI,CAACC,IAAL,CAAUP,KAAK,GAAGC,YAAlB,CAAD,CAAb;AACP,GAHQ,EAGN,CAACD,KAAD,EAAQC,YAAR,CAHM,CAAT;AAKA,QAAMO,eAAe,GAAGX,OAAO,CAAC,MAAM;AAClC,UAAMY,KAAK,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,MAAAA,KAAK,CAACE,IAAN,eACI,QAAC,UAAD,CAAY,IAAZ;AAEI,QAAA,MAAM,EAAED,CAAC,KAAKR,WAFlB;AAGI,QAAA,OAAO,EAAE,MAAMC,YAAY,CAACO,CAAD,CAH/B;AAAA,kBAKKA;AALL,SACSA,CADT;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;;AAED,WAAOD,KAAP;AACH,GAhB8B,EAgB5B,CAACL,UAAD,EAAaF,WAAb,CAhB4B,CAA/B;AAkBA,MAAIE,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;AAEtB,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACD,WAAW,GAAG,CAAf,CAD/B;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAK;AAF9B;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKM,eALL,eAMI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAE,MAAML,YAAY,CAACD,WAAW,GAAG,CAAf,CAD/B;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAKE;AAF9B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9CD;;GAAML,mB;;KAAAA,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\n\nconst PaginationComponent = ({\n    total = 0,\n    itemsPerPage = 10,\n    currentPage = 1,\n    onPageChange\n}) => {\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(() => {\n        if (total > 0 && itemsPerPage > 0)\n            setTotalPages(Math.ceil(total / itemsPerPage));\n    }, [total, itemsPerPage]);\n\n    const paginationItems = useMemo(() => {\n        const pages = [];\n\n        for (let i = 1; i <= totalPages; i++) {\n            pages.push(\n                <Pagination.Item\n                    key={i}\n                    active={i === currentPage}\n                    onClick={() => onPageChange(i)}\n                >\n                    {i}\n                </Pagination.Item>\n            );\n        }\n\n        return pages;\n    }, [totalPages, currentPage]);\n\n    if (totalPages === 0) return null;\n\n    return (\n        <Pagination>\n            <Pagination.Prev\n                onClick={() => onPageChange(currentPage - 1)}\n                disabled={currentPage === 1}\n            />\n            {paginationItems}\n            <Pagination.Next\n                onClick={() => onPageChange(currentPage + 1)}\n                disabled={currentPage === totalPages}\n            />\n        </Pagination>\n    );\n};\n\nexport default PaginationComponent;"]},"metadata":{},"sourceType":"module"}