{"ast":null,"code":"var _jsxFileName = \"/Users/kannakattisanjana/final_excel_data/src/Table.js\";\nimport React from \"react\";\nimport { Table as AntTable } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  const {\n    columns,\n    ...otherTableProps\n  } = props;\n  const sortableColumns = columns.map(column => {\n    const {\n      sorter,\n      dataIndex,\n      ...otherColumnProps\n    } = column;\n\n    if (sorter) {\n      const {\n        compare,\n        ...otherSorterProps\n      } = sorter;\n      return { ...otherColumnProps,\n        dataIndex,\n        sorter: {\n          compare: (rowA, rowB) => compare(rowA[dataIndex], rowB[dataIndex]),\n          ...otherSorterProps\n        }\n      };\n    }\n\n    return { ...otherColumnProps,\n      dataIndex\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(AntTable, {\n    columns: sortableColumns,\n    components: components,\n    ...otherTableProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/kannakattisanjana/final_excel_data/src/Table.js"],"names":["React","Table","AntTable","props","columns","otherTableProps","sortableColumns","map","column","sorter","dataIndex","otherColumnProps","compare","otherSorterProps","rowA","rowB","components"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,MAAlC;;;AAEA,MAAMD,KAAK,GAAIE,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAW,OAAGC;AAAd,MAAkCF,KAAxC;AAEA,QAAMG,eAAe,GAAGF,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAY;AAC9C,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqB,SAAGC;AAAxB,QAA6CH,MAAnD;;AAEA,QAAIC,MAAJ,EAAY;AACV,YAAM;AAAEG,QAAAA,OAAF;AAAW,WAAGC;AAAd,UAAmCJ,MAAzC;AAEA,aAAO,EACL,GAAGE,gBADE;AAELD,QAAAA,SAFK;AAGLD,QAAAA,MAAM,EAAE;AACNG,UAAAA,OAAO,EAAE,CAACE,IAAD,EAAOC,IAAP,KAAgBH,OAAO,CAACE,IAAI,CAACJ,SAAD,CAAL,EAAkBK,IAAI,CAACL,SAAD,CAAtB,CAD1B;AAEN,aAAGG;AAFG;AAHH,OAAP;AAQD;;AAED,WAAO,EAAE,GAAGF,gBAAL;AAAuBD,MAAAA;AAAvB,KAAP;AACD,GAjBuB,CAAxB;AAmBA,sBAAO,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEJ,eAAnB;AAAoC,IAAA,UAAU,EAAEU,UAAhD;AAAA,OAAgEX;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBD;;KAAMJ,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Table as AntTable } from \"antd\";\n\nconst Table = (props) => {\n  const { columns, ...otherTableProps } = props;\n\n  const sortableColumns = columns.map((column) => {\n    const { sorter, dataIndex, ...otherColumnProps } = column;\n\n    if (sorter) {\n      const { compare, ...otherSorterProps } = sorter;\n\n      return {\n        ...otherColumnProps,\n        dataIndex,\n        sorter: {\n          compare: (rowA, rowB) => compare(rowA[dataIndex], rowB[dataIndex]),\n          ...otherSorterProps\n        }\n      };\n    }\n\n    return { ...otherColumnProps, dataIndex };\n  });\n\n  return <AntTable columns={sortableColumns} components={components} {...otherTableProps} />;\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}